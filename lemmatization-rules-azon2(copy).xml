<!-- Poprzednia lista reguł, które zachowują liczbę -->
<rules>
    <!-- nam_* -->
    <rule name="SubstSubst_nam_liv_person" category="nam_liv_person">
        <wccl match="complete">
            and(
            inter(class[0],{subst,ger,depr}),
            inter(class[1],{subst,ger,depr}),
            setvar($Pos1, 0),
            setvar($Pos2, 1)
            )
        </wccl>
        <transformations>
            <set index="0" cas="nom"/>
            <set index="1" cas="nom"/>
        </transformations>
    </rule>
    <rule name="Adj_nam_adj_country" category="nam_adj_country">
        <wccl match="complete">
            and(
            inter(class[0],{adj,ppas,pact}),
            setvar($Pos1, 0)
            )
        </wccl>
        <transformations>
            <set index="0" cas="nom" gnd="m1" nmb="sg"/>
        </transformations>
    </rule>
    <rule name="Adj_nam_fac_road" category="nam_fac_road">
        <wccl match="complete">
            and(
            inter(class[0],{adj,ppas,pact}),
            setvar($Pos1, 0)
            )
        </wccl>
        <transformations>
            <set index="0" cas="nom" gnd="f"/>
        </transformations>
    </rule>
    <rule name="Adj_nam_loc_gpe_admin2" category="nam_loc_gpe_admin2">
        <wccl match="complete">
            and(
            inter(class[0],{adj}),
            setvar($Pos1, 0)
            )
        </wccl>
        <transformations>
            <set index="0" cas="nom" gnd="m3"/>
        </transformations>
    </rule>
    <rule name="Subst_PlGen_nam_fac_road" category="nam_fac_road">
        <wccl match="complete">
            and(
            inter(class[0],{subst}),
            inter(nmb[0],{pl}),
            inter(cas[0],{gen}),
            setvar($Pos1, 0)
            )
        </wccl>
        <transformations>
        </transformations>
    </rule>
    <rule name="AdvHyphenAdj_nam_loc_gpe_admin1" category="nam_loc_gpe_admin1">
        <wccl match="complete">
            and(
            inter(class[0],{adv}),
            regex(orth[1],"-"),
            inter(class[2],{adj}),
            setvar($Pos1, 0),
            setvar($Pos2, 1),
            setvar($Pos3, 2)
            )
        </wccl>
        <transformations>
            <set index="2" cas="nom" gnd="n"/>
        </transformations>
    </rule>


    <!-- Adj -->
    <rule name="Adj_m1">
        <wccl match="complete">
            and(
            inter(class[0],{adj,ppas,pact}),
            setvar($Pos1, 0)
            )
        </wccl>
        <transformations>
            <set index="0" cas="nom" gnd="m1"/>
        </transformations>
    </rule>
    <rule name="Adj">
        <wccl match="complete">
            and(
            inter(class[0],{adj,ppas,pact}),
            setvar($Pos1, 0)
            )
        </wccl>
        <transformations>
            <set index="0" cas="nom"/>
        </transformations>

    </rule>
    <!-- Subst + Adj -->
    <rule name="SubstAdj_Agr12-nmb-gnd-cas">
        <wccl match="complete">
            and(
            inter(class[0],{subst,ger,depr}),
            inter(class[1],{adj,pact}),
            agrpp(0,1,{nmb,gnd,cas}),
            setvar($Pos1, 0),
            setvar($Pos2, 1)
            )
        </wccl>
        <transformations>
            <set index="0" cas="nom"/>
            <set index="1" cas="nom"/>
        </transformations>
    </rule>
    <rule name="SubstAdj_Agr12-nmb-cas_Sg_FixGndN">
        <wccl match="complete">
            and(
            inter(class[0],{subst,ger,depr}),
            inter(class[1],{adj,pact}),
            inter(nmb[0],{sg}),
            inter(gnd[0],{n}),
            agrpp(0,1,{nmb,cas}),
            setvar($Pos1, 0),
            setvar($Pos2, 1)
            )
        </wccl>
        <transformations>
            <set index="0" cas="nom"/>
            <set index="1" cas="nom" gnd="n"/>
        </transformations>
    </rule>
    <rule name="SubstAdj_Agr12-nmb-cas_Sg_FixGndM1">
        <wccl match="complete">
            and(
            inter(class[0],{subst,ger,depr}),
            inter(class[1],{adj,pact}),
            inter(nmb[0],{sg}),
            inter(gnd[0],{m1}),
            agrpp(0,1,{nmb,cas}),
            setvar($Pos1, 0),
            setvar($Pos2, 1)
            )
        </wccl>
        <transformations>
            <set index="0" cas="nom"/>
            <set index="1" cas="nom" gnd="m1"/>
        </transformations>
    </rule>
    <rule name="SubstAndSubstAdj_Agr134-nmb-gnd-cas">
        <wccl match="complete">
            and(
            inter(class[0],{subst,ger,depr}),
            regex(base[1],"i"),
            inter(class[2],{subst,ger,depr}),
            inter(class[3],{adj,pact}),
            agrpp(0,2,{nmb,gnd,cas}),
            agrpp(2,3,{nmb,gnd,cas}),
            setvar($Pos1, 0),
            setvar($Pos2, 1),
            setvar($Pos3, 2),
            setvar($Pos4, 3)
            )
        </wccl>
        <transformations>
            <set index="0" cas="nom"/>
            <set index="2" cas="nom"/>
            <set index="3" cas="nom"/>
        </transformations>
    </rule>
    <rule name="SubstAndSubs">
        <wccl match="complete">
            and(
            inter(class[0],{subst,ger,depr}),
            regex(base[1],"i"),
            inter(class[2],{subst,ger,depr}),
            setvar($Pos1, 0),
            setvar($Pos2, 1),
            setvar($Pos3, 2)
            )
        </wccl>
        <transformations>
            <set index="0" cas="nom"/>
            <set index="2" cas="nom"/>
        </transformations>
    </rule>
    <!--
    Reguła jak SubstAdjPlFix bez uzgodnienia rodzaju. Wymusza rodzaj nijaki.
    Obejście dla błędów tagera, np.:
        kwalifikacji   zawodowych
        kwalifikacje   zawodowy
        subst:pl:gen:n adj:pl:gen:m1:pos
    and(
         inter(nmb[0], {pl}),
         inter(gnd[0],{n}),
         inter(class[0],{subst,ger,depr}),
         inter(class[1],{adj,ppas,pact}),
         agrpp(0,1,{nmb,cas}),
         setvar($Pos1, 0),
         setvar($Pos2, 1),
         setvar($s:Pos1mod, ["cas=nom"]),
         setvar($s:Pos2mod, ["cas=nom","gnd=n"])
    )
    </rule>
     -->
    <rule name="SubstAdj_Flex" source="azon">
        <wccl match="complete">
            and(
            or(
            and(
            inter(class[1],{adj}),
            inter(class[0],{subst,ger,depr}),
            agrpp(0,1,{nmb,gnd,cas}),
            setvar($Pos1, 0),
            setvar($Pos2, 1)
            ),//and
            and(
            inter(class[0],{adj}),
            inter(class[1],{subst,ger,depr}),
            agrpp(0,1,{nmb,gnd,cas}),
            setvar($Pos1, 0),
            setvar($Pos2, 1)
            )
            )//or
            )
        </wccl>
        <transformations>
            <set index="0" cas="nom"/>
            <set index="1" cas="nom"/>
        </transformations>
    </rule>
    <rule name="SubstAdj_SgFlex">
        <wccl match="complete">
            and(
            or(
            and(
            inter(class[1],{adj}),
            inter(nmb[0], {sg}),
            inter(class[0],{subst,ger,depr}),
            agrpp(0,1,{nmb,gnd,cas}),
            setvar($Pos1, 0),
            setvar($Pos2, 1)
            ),//and
            and(
            inter(class[0],{adj}),
            inter(nmb[1],{sg}),
            inter(class[1],{subst,ger,depr}),
            agrpp(0,1,{nmb,gnd,cas}),
            setvar($Pos1, 0),
            setvar($Pos2, 1)
            )
            )//or
            )
        </wccl>
        <transformations>
            <set index="0" cas="nom"/>
            <set index="1" cas="nom"/>
        </transformations>
    </rule>
    <rule name="SubstAdj_SgPl_FixNmbPl">
        <wccl match="complete">
            and(
            inter(class[0],{subst,ger,depr}),
            inter(class[1],{adj}),
            inter(nmb[0],{sg}),
            inter(nmb[1],{pl}),
            agrpp(0,1,{cas}),
            setvar($Pos1, 0),
            setvar($Pos2, 1)
            )
        </wccl>
        <transformations>
            <set index="0" cas="nom" nmb="pl"/>
            <set index="1" cas="nom"/>
        </transformations>
    </rule>
    <!--
    <rule name="SubstAdj_Flex">
    and(
        or(
             and(
                inter(class[0],{subst,ger,depr}),
                inter(class[1],{adj,ppas,ppas}),
                agrpp(0,1,{nmb,gnd,cas}),
                setvar($Pos1, 0),
                setvar($Pos2, 1)
             ),//and
             and(
                inter(class[0],{adj,ppas,ppas}),
                inter(class[1],{subst,ger,depr}),
                agrpp(0,1,{nmb,gnd,cas}),
                setvar($Pos1, 0),
                setvar($Pos2, 1)
             )
        ),//or
        setvar($s:Pos1mod, ["cas=nom"]),
        setvar($s:Pos2mod, ["cas=nom"])
    )
    </rule>
    -->
    <!--
    Obejście błędu tagera, który nie rozpoznał uzgodnienia frazy, np.:
        agencji        wykonawczych
        agencja        wykonawczy
        subst:sg:gen:f adj:pl:gen:f:pos
     -->
    <!--
    <rule name="SubstAdj_SgNoNmbAgr">
    and(
        inter(class[0],{subst,ger,depr}),
        inter(nmb[0],{sg}),
        inter(class[1],{adj}),
        agrpp(0,1,{gnd,cas}),
        setvar($Pos1, 0),
        setvar($Pos2, 1),
        setvar($s:Pos1mod, ["cas=nom"]),
        setvar($s:Pos2mod, ["cas=nom"])
    )
    </rule>
    -->
    <!-- Adj + Subst -->
    <rule name="AdjSubstPlFix">
        <wccl match="complete">
            and(
            inter(class[0],{adj}),
            inter(class[1],{subst,ger,depr}),
            inter(nmb[1],{pl}),
            agrpp(0,1,{nmb,gnd,cas}),
            setvar($Pos1, 0),
            setvar($Pos2, 1)
            )
        </wccl>
        <transformations>
            <set index="0" cas="nom"/>
            <set index="1" cas="nom"/>
        </transformations>
    </rule>
    <rule name="AdjSubstSgFix">
        <wccl match="complete">
            and(
            inter(class[0],{adj}),
            inter(class[1],{subst,ger,depr}),
            inter(nmb[1],{sg}),
            agrpp(0,1,{nmb,gnd,cas}),
            setvar($Pos1, 0),
            setvar($Pos2, 1)
            )
        </wccl>
        <transformations>
            <set index="0" cas="nom"/>
            <set index="1" cas="nom"/>
        </transformations>
    </rule>
    <rule name="AdjSubstPlFlex">
        <wccl match="complete">
            and(
            or(
            and(
            inter(class[0],{adj}),
            inter(class[1],{subst,ger,depr}),
            inter(nmb[1],{pl}),
            agrpp(0,1,{nmb,gnd,cas}),
            setvar($Pos1, 0),
            setvar($Pos2, 1)
            ),
            and(
            inter(class[0],{subst,ger,depr}),
            inter(nmb[0],{pl}),
            inter(class[1],{adj}),
            agrpp(0,1,{nmb,gnd,cas}),
            setvar($Pos1, 0),
            setvar($Pos2, 1)
            )
            )
            )
        </wccl>
        <transformations>
            <set index="0" cas="nom"/>
            <set index="1" cas="nom"/>
        </transformations>
    </rule>
    <rule name="AdjSubstSgFlex">
        <wccl match="complete">
            and(
            or(
            and(
            inter(class[0],{adj}),
            inter(class[1],{subst,ger,depr}),
            inter(nmb[1],{sg}),
            agrpp(0,1,{nmb,gnd,cas}),
            setvar($Pos1, 0),
            setvar($Pos2, 1)
            ),
            and(
            inter(class[0],{subst,ger,depr}),
            inter(nmb[0],{sg}),
            inter(class[1],{adj}),
            agrpp(0,1,{nmb,gnd,cas}),
            setvar($Pos1, 0),
            setvar($Pos2, 1)
            )
            )
            )
        </wccl>
        <transformations>
            <set index="0" cas="nom"/>
            <set index="1" cas="nom"/>
        </transformations>
    </rule>
    <rule name="AdjSubstFix">
        <wccl match="complete">
            and(
            inter(class[0],{adj}),
            inter(class[1],{subst,ger,depr}),
            agrpp(0,1,{nmb,gnd,cas}),
            setvar($Pos1, 0),
            setvar($Pos2, 1)
            )
        </wccl>
        <transformations>
            <set index="0" cas="nom"/>
            <set index="1" cas="nom"/>
        </transformations>
    </rule>
    <rule name="AdjSubstFlex">
        <wccl match="complete">
            and(
            or(
            and(
            inter(class[0],{adj}),
            inter(class[1],{subst,ger,depr}),
            agrpp(0,1,{nmb,gnd,cas}),
            setvar($Pos1, 0),
            setvar($Pos2, 1)
            ),
            and(
            inter(class[0],{subst,ger,depr}),
            inter(class[1],{adj}),
            agrpp(0,1,{nmb,gnd,cas}),
            setvar($Pos1, 0),
            setvar($Pos2, 1)
            )
            )
            )
        </wccl>
        <transformations>
            <set index="0" cas="nom"/>
            <set index="1" cas="nom"/>
        </transformations>
    </rule>
    <rule name="AdjSubst_M1_Fix">
        <wccl match="complete">
            and(
            inter(class[0],{adj}),
            inter(class[1],{subst,ger,depr}),
            inter(gnd[1],{m1}),
            agrpp(0,1,{nmb,cas}),
            setvar($Pos1, 0),
            setvar($Pos2, 1)
            )
        </wccl>
        <transformations>
            <set index="0" cas="nom" gnd="m1"/>
            <set index="1" cas="nom"/>
        </transformations>
    </rule>

    <!-- Adj + Subst -->
    <rule name="SubstSubst_GenSg_Fix">
        <wccl match="complete">
            and(
            inter(class[0],{subst,ger,depr}),
            inter(nmb[0],{sg}),
            inter(class[1],{subst,ger,depr}),
            inter(cas[1],{gen}),
            setvar($Pos1, 0),
            setvar($Pos2, 1)
            )
        </wccl>
        <transformations>
            <set index="0" cas="nom"/>
        </transformations>
    </rule>
    <rule name="SubstSubst_Gen_Fix" source="azon">
        <wccl match="complete">
            and(
            inter(class[0],{subst,ger,depr}),
            inter(class[1],{subst,ger,depr}),
            inter(cas[1],{gen}),
            setvar($Pos1, 0),
            setvar($Pos2, 1)
            )
        </wccl>
        <transformations>
            <set index="0" cas="nom"/>
        </transformations>
    </rule>
    <rule name="SubstSubst_Agr12-nmb-gnd-cas" source="azon">
        <wccl match="complete">
            and(
            inter(class[0],{subst,ger,depr}),
            inter(class[1],{subst,ger,depr}),
            agrpp(0,1,{nmb,gnd,cas}),
            setvar($Pos1, 0),
            setvar($Pos2, 1)
            )
        </wccl>
        <transformations>
            <set index="0" cas="nom"/>
            <set index="1" cas="nom"/>
        </transformations>
    </rule>
    <!-- Adj + Subst + Adj -->
    <rule name="AdjSubstAdj_Agr123-nmb-gnd-cas">
        <wccl match="complete">
            and(
            inter(class[0],{adj,ppas}),
            inter(class[1],{subst,ger,depr}),
            inter(class[2],{adj}),
            agr(0,2,{nmb,gnd,cas}),
            setvar($Pos1, 0),
            setvar($Pos2, 1),
            setvar($Pos3, 2)
            )
        </wccl>
        <transformations>
            <set index="0" cas="nom"/>
            <set index="1" cas="nom"/>
            <set index="2" cas="nom"/>
        </transformations>
    </rule>
    <!-- mapa akustyczna Gdyni -->
    <rule name="SubstAdjSubst_Agr12-nmb-gnd-cas" source="azon">
        <wccl match="complete">
            and(
            inter(class[0],{subst,ger,depr}),
            inter(class[1],{adj}),
            inter(class[2],{subst,ger,depr}),
            agr(0,1,{nmb,gnd,cas}),
            setvar($Pos1, 0),
            setvar($Pos2, 1),
            setvar($Pos3, 2)
            )
        </wccl>
        <transformations>
            <set index="0" cas="nom"/>
            <set index="1" cas="nom"/>
        </transformations>
    </rule>
    <!-- Bibliotece Polskiej Piosenki -->
    <rule name="SubstAdjSubst_Agr23-nmb-ger-cas" source="azon">
        <wccl match="complete">
            and(
            inter(class[0],{subst,ger,depr}),
            inter(class[1],{adj}),
            inter(class[2],{subst,ger,depr}),
            agr(1,2,{nmb,gnd,cas}),
            setvar($Pos1, 0),
            setvar($Pos2, 1),
            setvar($Pos3, 2)
            )
        </wccl>
        <transformations>
            <set index="0" cas="nom"/>
        </transformations>
    </rule>
    <rule name="SubstAdjSubst_Agr123case">
        <wccl match="complete">
            and(
            inter(class[0],{subst,ger,depr}),
            inter(class[1],{adj}),
            inter(class[2],{subst,ger,depr}),
            agr(0,2,{cas}),
            setvar($Pos1, 0),
            setvar($Pos2, 1),
            setvar($Pos3, 2)
            )
        </wccl>
        <transformations>
            <set index="0" cas="nom"/>
        </transformations>
    </rule>
    <rule name="SubstAdjAdjFlex">
        <wccl match="complete">
            and(
            or(
            and(
            inter(class[0],{subst,ger,depr}),
            inter(class[1],{adj}),
            inter(class[2],{adj}),
            agr(0,2,{nmb,gnd,cas}),
            setvar($Pos1, 1),
            setvar($Pos2, 0),
            setvar($Pos3, 2)
            ),//and
            and(
            inter(class[0],{adj}),
            inter(class[1],{subst,ger,depr}),
            inter(class[2],{adj}),
            agr(0,2,{nmb,gnd,cas}),
            setvar($Pos1, 0),
            setvar($Pos2, 1),
            setvar($Pos3, 2)
            ),
            and(
            inter(class[0],{adj}),
            inter(class[1],{subst,ger,depr}),
            inter(class[2],{adj}),
            agr(0,2,{nmb,gnd,cas}),
            setvar($Pos1, 2),
            setvar($Pos2, 1),
            setvar($Pos3, 0)
            )
            )//or
            )
        </wccl>
        <transformations>
            <set index="0" cas="nom"/>
            <set index="1" cas="nom"/>
            <set index="2" cas="nom"/>
        </transformations>
    </rule>
    <rule name="SubstAdjSubstAdj_Gen" source="azon">
        <wccl match="complete">
            and(
            inter(class[0],{subst,ger,depr}),
            inter(class[1],{adj}),
            inter(class[2],{subst,ger,depr}),
            inter(class[3],{adj}),
            agr(1,3,{nmb,gnd,cas}),
            inter(cas[1],{gen}),
            setvar($Pos1, 0),
            setvar($Pos2, 1),
            setvar($Pos3, 2),
            setvar($Pos4, 3)
            )
        </wccl>
        <transformations>
            <set index="0" cas="nom"/>
        </transformations>
    </rule>
    <rule name="SubstSubstSubst_GenGen" source="azon">
        <wccl match="complete">
            and(
            inter(class[0],{subst,ger,depr}),
            inter(class[1],{subst,ger,depr}),
            inter(class[2],{subst,ger,depr}),
            inter(cas[1],{gen}),
            inter(cas[2],{gen}),
            setvar($Pos1, 0),
            setvar($Pos2, 1),
            setvar($Pos3, 2)
            )
        </wccl>
        <transformations>
            <set index="0" cas="nom"/>
        </transformations>
    </rule>
    <rule name="SubstSubstAdj" source="azon">
        <wccl match="complete">
            and(
            inter(class[0],{subst,ger,depr}),
            inter(class[1],{subst,ger,depr}),
            inter(class[2],{adj,ppas,pact}),
            inter(cas[1],{gen}),
            inter(cas[2],{gen}),
            setvar($Pos1, 0),
            setvar($Pos2, 1),
            setvar($Pos3, 2)
            )
        </wccl>
        <transformations>
            <set index="0" cas="nom"/>
        </transformations>
    </rule>
    <rule name="AdjSubstSubst_Gen">
        <wccl match="complete">
            and(
            inter(class[0],{adj,ppas,pact}),
            inter(class[1],{subst,ger,depr}),
            inter(class[2],{subst,ger,depr}),
            agr(0,1,{nmb,gnd,cas}),
            inter(cas[2],{gen}),
            setvar($Pos1, 0),
            setvar($Pos2, 1),
            setvar($Pos3, 2)
            )
        </wccl>
        <transformations>
            <set index="0" cas="nom"/>
            <set index="1" cas="nom"/>
        </transformations>
    </rule>
    <rule name="AdjSubstSubst_Dat">
        <wccl match="complete">
            and(
            inter(class[0],{adj,ppas,pact}),
            inter(class[1],{subst,ger,depr}),
            inter(class[2],{subst,ger,depr}),
            agr(0,1,{nmb,gnd,cas}),
            inter(cas[2],{dat}),
            setvar($Pos1, 0),
            setvar($Pos2, 1),
            setvar($Pos3, 2)
            )
        </wccl>
        <transformations>
            <set index="0" cas="nom"/>
            <set index="1" cas="nom"/>
        </transformations>
    </rule>

    <rule name="SubstAdvHyphenAdj_FixGndM1" source="azon">
        <wccl match="complete">
            and(
            inter(class[0],{subst,ger,depr}),
            inter(gnd[0],{m1,m2,m3}),
            inter(class[1],{adv}),
            regex(orth[2],"-"),
            inter(class[3],{adj,ppas,pact}),
            setvar($Pos1, 0),
            setvar($Pos2, 1),
            setvar($Pos3, 2),
            setvar($Pos4, 3)
            )
        </wccl>
        <transformations>
            <set index="0" cas="nom"/>
            <set index="3" cas="nom" gnd="m1"/>
        </transformations>
    </rule>
    <rule name="AdvAdjSubst_Agr12-nmb-gnd-cas" source="azon">
        <wccl match="complete">
            and(
            inter(class[0],{adv}),
            inter(class[1],{adj,ppas,pact}),
            inter(class[2],{subst,ger,depr}),
            agr(1,2,{nmb,gnd,cas}),
            setvar($Pos1, 0),
            setvar($Pos2, 1),
            setvar($Pos3, 2)
            )
        </wccl>
        <transformations>
            <set index="1" cas="nom"/>
            <set index="2" cas="nom"/>
        </transformations>
    </rule>
    <rule name="AdvAdjSubstSubst_Gen" source="azon">
        <wccl match="complete">
            and(
            inter(class[0],{adv}),
            inter(class[1],{adj,ppas,pact}),
            inter(class[2],{subst,ger,depr}),
            inter(class[3],{subst,ger,depr}),
            agr(1,2,{nmb,gnd,cas}),
            inter(cas[3],{gen}),
            setvar($Pos1, 0),
            setvar($Pos2, 1),
            setvar($Pos3, 2),
            setvar($Pos4, 3)
            )
        </wccl>
        <transformations>
            <set index="1" cas="nom"/>
            <set index="2" cas="nom"/>
        </transformations>
    </rule>
    <rule name="NumAndNum" source="azon">
        <wccl match="complete">
            and(
            inter(class[0],{num}),
            regex(base[1], "i"),
            inter(class[2],{num}),
            setvar($Pos1, 0),
            setvar($Pos2, 1),
            setvar($Pos3, 2)
            )
        </wccl>
        <transformations>
            <set index="0" cas="nom"/>
            <set index="2" cas="nom"/>
        </transformations>
    </rule>
    <rule name="Num2" source="azon">
        <wccl match="complete">
            and(
            inter(class[0],{num}),
            inter(class[1],{num}),
            setvar($Pos1, 0),
            setvar($Pos2, 1)
            )
        </wccl>
        <transformations>
            <set index="0" cas="nom"/>
            <set index="1" cas="nom"/>
        </transformations>
    </rule>
    <rule name="Num3" source="azon">
        <wccl match="complete">
            and(
            inter(class[0],{num}),
            inter(class[1],{num}),
            inter(class[2],{num}),
            setvar($Pos1, 0),
            setvar($Pos2, 1),
            setvar($Pos3, 2)
            )
        </wccl>
        <transformations>
            <set index="0" cas="nom"/>
            <set index="1" cas="nom"/>
            <set index="2" cas="nom"/>
        </transformations>
    </rule>
    <rule name="SubstHyphenSubst" source="azon">
        <wccl match="complete">
            and(
            inter(class[0],{subst}),
            regex(base[1], "-"),
            inter(class[2],{subst}),
            setvar($Pos1, 0),
            setvar($Pos2, 1),
            setvar($Pos3, 2)
            )
        </wccl>
        <transformations>
            <set index="0" cas="nom"/>
            <set index="2" cas="nom"/>
        </transformations>
    </rule>
    <rule name="AdjaHyphenSubst" source="azon">
        <wccl match="complete">
            and(
            inter(class[0],{adja}),
            regex(base[1], "-"),
            inter(class[2],{subst}),
            setvar($Pos1, 0),
            setvar($Pos2, 1),
            setvar($Pos3, 2)
            )
        </wccl>
        <transformations>
            <set index="2" cas="nom"/>
        </transformations>
    </rule>
    <rule name="SubstAdjaHyphenAdj" source="azon">
        <wccl match="complete">
            and(
            inter(class[0],{subst}),
            inter(class[1],{adja}),
            regex(base[2], "-"),
            inter(class[3],{adj}),
            setvar($Pos1, 0),
            setvar($Pos2, 1),
            setvar($Pos3, 2),
            setvar($Pos4, 3)
            )
        </wccl>
        <transformations>
            <set index="0" cas="nom"/>
            <set index="3" cas="nom"/>
        </transformations>
    </rule>
    <!--
    Poniższe reguły dopasowują początek frazy. Dla dopasowanego fragmentu
    można zastosować transformacje. Ogon (czyli pozostałe tokeny, nie uwzględnione
    w warunkach) są przepisywane. Atrybut 'setvar($PosTail, 0)' wskazuje, że są to
    reguły z "ogonem".
     -->
    <rule name="SubstAdjTail" source="azon">
        <wccl match="prefix">
            and(
            inter(class[0],{subst,ger,depr}),
            inter(class[1],{adj,ppas,pact}),
            setvar($Pos1, 0),
            setvar($Pos2, 1),
            setvar($PosTail, 0)
            )
        </wccl>
        <transformations>
            <set index="0" cas="nom"/>
            <set index="1" cas="nom"/>
        </transformations>
    </rule>
    <rule name="SubstTail" source="azon">
        <wccl match="prefix">
            and(
            inter(class[0],{subst,ger,depr}),
            setvar($Pos1, 0),
            setvar($PosTail, 0)
            )
        </wccl>
        <transformations>
            <set index="0" cas="nom"/>
        </transformations>
    </rule>
    <rule name="AdjSubstTail" source="azon">
        <wccl match="prefix">
            and(
            inter(class[0],{adj,ppas,pact}),
            inter(class[1],{subst,ger,depr}),
            agr(0,1,{nmb,gnd,cas}),
            setvar($Pos1, 0),
            setvar($Pos2, 1),
            setvar($PosTail, 0)
            )
        </wccl>
        <transformations>
            <set index="0" cas="nom"/>
            <set index="1" cas="nom"/>
        </transformations>
    </rule>
</rules>
